(use srfi-1)

; 15*16^(k-1) - 15^k - 2*14*15(k-1) + 2*14^k +  13*14^(k-1)  - 13^k
;
; 0 から始まらない k 桁の16進数の総数
;   15*16^(k-1)
;   
; 0 から始まらず、0, 1, a のいずれも含まない  k 桁の16進数の総数
;   13^k
;   
; 0 から始まらず、すくなくとも 0 か 1 か a を１度は含む k 桁の16進数の総数( 0 ∪ 1 ∪ a  )
;   15*16^(k-1) - 13^k
;
; 0 から始まらず  1 を１度も含まない k 桁の 16進数の総数
;    14*15(k-1)
;
; 0 から始まらず  a を１度も含まない k 桁の 16進数の総数
;    14*15(k-1)
;
; 0 から始まらず  0 を１度も含まない k 桁の 16進数の総数
;    15*k
;
; 0 から始まらず、0 と 1 のいずれも含まない  k 桁の16進数の総数
;    14*k 
;
; 0 から始まらず、0 と a のいずれも含まない  k 桁の16進数の総数
;    14*k 
;
; 0 から始まらず、1 と a のいずれも含まない  k 桁の16進数の総数
;    13*14^(k-1) 


(define (p162)
  (letrec ((calc-k (lambda (k)
                     (- (+ (* 15 (expt 16 (- k 1)))
                           (* 2 (expt 14 k))
                           (* 13 (expt 14 (- k 1))))
                        (* 28 (expt 15 (- k 1)))
                        (expt 15 k)
                        (expt 13 k))))
           (as_hex (lambda (n) (number->string n 16))))
    (as_hex (apply + (map calc-k (iota 14 3))))))

(print (p162))
