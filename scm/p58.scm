(use srfi-1)
(load "./util.scm")

(define (p58)
  (define (edge-length n) (- (* n 2) 1))
  (define (three-corner n)
      (let* ((l (edge-length n))
             (right-bottom (expt l 2))
             (left-bottom (- right-bottom (- l 1)))
             (left-top (- left-bottom (- l 1)))
             (right-top (- left-top (- l 1))))
        (list right-top left-top left-bottom right-bottom)))
  (let loop ((n 3)
             (total 5)
             (total-prime 3))
    (if (< (/ total-prime total) 0.10)
      (edge-length (- n 1))
      (loop (+ n 1)
            (+ total 4)
            (+ total-prime (length (filter prime-by-divide? (three-corner n))))))))
  
(print (p58))
